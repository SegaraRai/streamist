name: 'Deploy Transcoder'

on:
  push:
    branches:
      - staging
    paths:
      - 'packages/transcoder/**'
      - 'packages/shared/**'
      - 'packages/shared-server/**'
      - '.github/workflows/deploy_transcoder.yml'

jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - run: echo "TARGET_BUILD_REV=${GITHUB_SHA::7}" >> $GITHUB_ENV
      - name: Set env (Staging)
        if: ${{ github.ref == 'refs/heads/staging' }}
        run: |
          echo "DEPLOY_ENV=STAGING" >> $GITHUB_ENV
          echo "TARGET_NODE_ENV=staging" >> $GITHUB_ENV
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: pnpm
      - run: pnpm i --frozen-lockfile
      - run: pnpm run generate
      - run: |
          cd packages/operation
          pnpm run start -- initAll $TARGET_NODE_ENV
      - run: pnpm run build:transcoder
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets[format('SECRET_GH_{0}_DEPLOY_TRANSCODER_LAMBDA_ACCESS_KEY_ID', env.DEPLOY_ENV)] }}
          aws-secret-access-key: ${{ secrets[format('SECRET_GH_{0}_DEPLOY_TRANSCODER_LAMBDA_SECRET_ACCESS_KEY', env.DEPLOY_ENV)] }}
          aws-region: us-east-2
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets[format('SECRET_GH_{0}_DEPLOY_TRANSCODER_GCP_WIF_IDP', env.DEPLOY_ENV)] }}
          service_account: ${{ secrets[format('SECRET_GH_{0}_DEPLOY_TRANSCODER_GCP_WIF_SA', env.DEPLOY_ENV)] }}
      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Deploy transcoder to AWS Lambda and Google Cloud Run
        run: |
          cd packages/transcoder
          cp ../operation/result/$TARGET_NODE_ENV/deploy.sh .
          chmod +x deploy.sh
          ./deploy.sh
